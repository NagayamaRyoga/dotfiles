snippets:
  # cd
  - name: --
    keyword: --
    snippet: cd -

  - name: ..
    keyword: ..
    snippet: cd ..

  - name: ../..
    keyword: ../..
    snippet: cd ../..

  - name: ../../..
    keyword: ../../..
    snippet: cd ../../..

  # git
  - name: g
    keyword: g
    snippet: git

  # git add
  - name: git aa
    keyword: aa
    snippet: add -vA
    context:
      lbuffer: ^git\s

  - name: git ai
    keyword: ai
    snippet: add -i
    context:
      lbuffer: ^git\s

  # git branch
  - name: git b
    keyword: b
    snippet: branch
    context:
      lbuffer: ^git\s

  # git commit
  - name: git c
    keyword: c
    snippet: commit
    context:
      lbuffer: ^git\s

  - name: git cam
    keyword: cam
    snippet: commit --amend --no-edit
    context:
      lbuffer: ^git\s

  - name: git cm
    keyword: cm
    snippet: commit -m '{{}}'
    context:
      lbuffer: ^git\s

  - name: git C
    keyword: C
    snippet: cz
    context:
      lbuffer: ^git\s

  # git cherry-pick
  - name: git cp
    keyword: cp
    snippet: cherry-pick
    context:
      lbuffer: ^git\s

  # git diff
  - name: git st
    keyword: st
    snippet: diff --stat
    context:
      lbuffer: ^git\s

  - name: git stat
    keyword: stat
    snippet: diff --stat
    context:
      lbuffer: ^git\s

  - name: git stats
    keyword: stats
    snippet: diff --stat --staged
    context:
      lbuffer: ^git\s

  - name: git sts
    keyword: sts
    snippet: diff --stat --staged
    context:
      lbuffer: ^git\s

  - name: git dfi
    keyword: dfi
    snippet: df --ignore-all-space
    context:
      lbuffer: ^git\s

  - name: git dfs
    keyword: dfs
    snippet: df --staged
    context:
      lbuffer: ^git\s

  - name: git dfsi
    keyword: dfsi
    snippet: df --staged --ignore-all-space
    context:
      lbuffer: ^git\s

  # git fetch
  - name: git f
    keyword: f
    snippet: fetch
    context:
      lbuffer: ^git\s

  - name: git fu
    keyword: fu
    snippet: fetch upstream
    context:
      lbuffer: ^git\s

  # git log
  - name: git lg
    keyword: lg
    snippet: graph
    context:
      lbuffer: ^git\s

  # git pull
  - name: git pl
    keyword: pl
    snippet: pull
    context:
      lbuffer: ^git\s

  # git push
  - name: git ps
    keyword: ps
    snippet: push
    context:
      lbuffer: ^git\s

  - name: git psu
    keyword: psu
    snippet: push -u origin HEAD
    context:
      lbuffer: ^git\s

  - name: git pst
    keyword: pst
    snippet: push --tags
    context:
      lbuffer: ^git\s

  - name: git push -f
    keyword: -f
    snippet: --force-with-lease
    context:
      lbuffer: ^git(\s+\S+)*\s+push\s

  # git rev-parse
  - name: git root
    keyword: root
    snippet: rev-parse --show-toplevel
    context:
      lbuffer: ^git\s

  # git status
  - name: git s
    keyword: s
    snippet: status
    context:
      lbuffer: ^git\s

  # git switch
  - name: git sw
    keyword: sw
    snippet: switch
    context:
      lbuffer: ^git\s

  # git tag
  - name: git tags
    keyword: tags
    snippet: tag -l --sort=v:refname
    context:
      lbuffer: ^git\s

  # git current branch name
  - name: B
    keyword: B
    snippet: git symbolic-ref --short HEAD
    evaluate: true
    context:
      lbuffer: ^git\s

  - name: OB
    keyword: OB
    snippet: zsh -c "echo origin/$(git symbolic-ref --short HEAD)"
    evaluate: true
    context:
      lbuffer: ^git\s

  # git upstream
  - name: git U
    keyword: U
    snippet: upstream
    context:
      lbuffer: ^git\s

  # lazygit
  - name: lg
    keyword: lg
    snippet: lazygit

  # docker
  - name: dok
    keyword: dok
    snippet: docker

  # docker compose
  - name: docker c
    keyword: c
    snippet: compose
    context:
      lbuffer: ^docker\s

  # docker pull
  - name: docker pl
    keyword: pl
    snippet: pull
    context:
      lbuffer: ^docker\s

  # docker run
  - name: docker ri
    keyword: ri
    snippet: run -it
    context:
      lbuffer: ^docker\s

  - name: docker rrm
    keyword: rrm
    snippet: run --rm
    context:
      lbuffer: ^docker\s

  - name: docker rrmi
    keyword: rrmi
    snippet: run --rm -it
    context:
      lbuffer: ^docker\s

  # terraform
  - name: tf
    keyword: tf
    snippet: terraform

  - name: terraform plan
    keyword: p
    snippet: plan
    context:
      lbuffer: ^terraform\s

  - name: terraform apply
    keyword: ap
    snippet: apply
    context:
      lbuffer: ^terraform\s

  # hgrep
  - name: hg
    keyword: hg
    snippet: hgrep

  # awk
  - name: ".1"
    keyword: ".1"
    snippet: awk '{ print $1 }'

  - name: ".2"
    keyword: ".2"
    snippet: awk '{ print $2 }'

  - name: ".3"
    keyword: ".3"
    snippet: awk '{ print $3 }'

  - name: ".4"
    keyword: ".4"
    snippet: awk '{ print $4 }'

  - name: ".5"
    keyword: ".5"
    snippet: awk '{ print $5 }'

  # tee
  - name: teep
    keyword: teep
    snippet: tee >(pp)

  # date
  - name: yyyymmdd
    keyword: yyyymmdd
    snippet: date "+%Y%m%d"
    evaluate: true
    global: true

  - name: yyyy-mm-dd
    keyword: yyyy-mm-dd
    snippet: date "+%Y-%m-%d"
    evaluate: true
    global: true

  - name: yyyy/mm/dd
    keyword: yyyy/mm/dd
    snippet: date "+%Y/%m/%d"
    evaluate: true
    global: true

  # coreutils
  - name: tailf
    keyword: tailf
    snippet: tail -f

  # --version
  - name: python -v
    keyword: -v
    snippet: -V
    global: true
    context:
      lbuffer: ^(python3?|pip3?)\s

  - name: java -v
    keyword: -v
    snippet: -version
    global: true
    context:
      lbuffer: ^java\s

.default-options: &default-options
  --exit-0: true
  --select-1: true
  --tiebreak: begin,index
  --height: 60%
  --cycle: true
  --preview-window: right:50%

.multi-options: &multi-options
  <<: *default-options
  --multi: true

.format-options: &format-options
  <<: *default-options
  --nth: "3"

completions:
  # basic command
  - name: file
    patterns:
      - ^\s*(bat|cat|delta|diff|e|grep|head|hexdump|hexyl|less|nvim|sed|tail|vim|vi)(\s+\S+)*\s+$
    sourceCommand: fd --color=always --hidden --type=f
    options:
      <<: *multi-options
      --preview: fzf-preview-file {}
    callback: sed 's/ /\\ /g' | paste -s -d ' ' -

  - name: file or directory
    patterns:
      - ^\s*(code|cp|ln|mv|rm|subl)(\s+\S+)*\s+$
    sourceCommand: fd --color=always --hidden
    options:
      <<: *default-options
      --preview: fzf-preview-file {}
    callback: sed 's/ /\\ /g'

  - name: directory
    patterns:
      - ^\s*(cd|la|ll|ls|tree)(\s+\S+)*\s+$
    sourceCommand: fd --color=always --hidden --type=d
    options:
      <<: *default-options
      --preview: fzf-preview-directory {}
    callback: sed -E 's/ /\\ /g; s,/?$,/,'

  # asdf
  - name: asdf
    patterns:
      - ^\s*(asdf)\s+$
    sourceCommand: >
      (
      "$ZENO_HOME/scripts/options.zsh" "asdf/subcommands" "\ufb32" "command" "yellow";
      "$ZENO_HOME/scripts/options.zsh" "asdf/options" "\uf73a" "option" "blue";
      )
    options: *format-options
    callback: awk '{ print $3 }'

  # curl
  - name: curl
    patterns:
      - ^\s*(curl)(\s+\S+)*\s+$
    sourceCommand: cat "$ZENO_HOME/snippets/curl/snippet.txt"
    options: *multi-options
    callback: paste -s -d ' ' -

  # docker
  - name: docker-build
    patterns:
      - ^\s*(docker)\s+(build)\s+(\S+\s+)*$
    sourceCommand: >
      "$ZENO_HOME/scripts/options.zsh" "docker/build-options" "\uf73a" "option" "blue"
    options: *format-options
    callback: awk '{ print $3 }'

  - name: docker-run
    patterns:
      - ^\s*(docker)\s+(run)\s+(\S+\s+)*$
    sourceCommand: >
      (
      "$ZENO_HOME/scripts/docker-images.zsh";
      "$ZENO_HOME/scripts/options.zsh" "docker/run-options" "\uf73a" "option" "blue";
      )
    options: *format-options
    callback: awk '{ print $3 }'

  - name: docker
    patterns:
      - ^\s*(docker)\s+$
    sourceCommand: >
      (
      "$ZENO_HOME/scripts/options.zsh" "docker/subcommands" "\ufb32" "command" "yellow";
      "$ZENO_HOME/scripts/options.zsh" "docker/aliases" "\uf8e9" "alias" "red";
      "$ZENO_HOME/scripts/options.zsh" "docker/options" "\uf73a" "option" "blue";
      )
    options: *format-options
    callback: awk '{ print $3 }'

  # git
  - name: git-branch
    patterns:
      - ^\s*(git)(\s+-\S+)*\s+(branch)(\s+\S+)*\s+$
    sourceCommand: >
      "$ZENO_HOME/scripts/git-local-branches.zsh"
    options: *format-options
    callback: awk '{ print $3 }'

  - name: git-cherry-pick
    patterns:
      - ^\s*(git)(\s+-\S+)*\s+(cherry-pick)(\s+\S+)*\s+$
    sourceCommand: >
      (
      "$ZENO_HOME/scripts/git-commits.zsh" --all;
      "$ZENO_HOME/scripts/options.zsh" "git/cherry-pick-options" "\uf73a" "option" "blue";
      )
    options:
      <<: *format-options
      --multi: true
    callback: awk '{ print $3 }' | tr '\n' ' '

  - name: git-diff
    patterns:
      - ^\s*(git)(\s+-\S+)*\s+(df|diff)(\s+\S+)*\s+$
    sourceCommand: >
      (
      "$ZENO_HOME/scripts/git-local-branches.zsh";
      "$ZENO_HOME/scripts/git-remote-branches.zsh";
      "$ZENO_HOME/scripts/git-tags.zsh";
      "$ZENO_HOME/scripts/git-commits.zsh";
      "$ZENO_HOME/scripts/options.zsh" "git/diff-options" "\uf73a" "option" "blue";
      )
    options: *format-options
    callback: awk '{ print $3 }'

  - name: git-fetch
    patterns:
      - ^\s*(git)(\s+-\S+)*\s+(fetch)(\s+\S+)*\s+$
    sourceCommand: git remote
    options:
      <<: *format-options
      --preview: git remote get-url {}
    callback: awk '{ print $1 }'

  - name: git-log
    patterns:
      - ^\s*(git)(\s+-\S+)*\s+(graph|log)(\s+\S+)*\s+$
    sourceCommand: >
      (
      "$ZENO_HOME/scripts/git-local-branches.zsh";
      "$ZENO_HOME/scripts/git-remote-branches.zsh";
      "$ZENO_HOME/scripts/git-tags.zsh";
      "$ZENO_HOME/scripts/git-commits.zsh";
      )
    options: *format-options
    callback: awk '{ print $3 }'

  - name: git-rebase
    patterns:
      - ^\s*(git)(\s+-\S+)*\s+(rebase)(\s+\S+)*\s+$
    sourceCommand: >
      (
      "$ZENO_HOME/scripts/git-local-branches.zsh";
      "$ZENO_HOME/scripts/git-remote-branches.zsh";
      "$ZENO_HOME/scripts/git-tags.zsh";
      "$ZENO_HOME/scripts/git-commits.zsh";
      )
    options: *format-options
    callback: awk '{ print $3 }'

  - name: git-reset
    patterns:
      - ^\s*(git)(\s+-\S+)*\s+(reset)(\s+\S+)*\s+$
    sourceCommand: >
      (
      "$ZENO_HOME/scripts/git-local-branches.zsh";
      "$ZENO_HOME/scripts/git-remote-branches.zsh";
      "$ZENO_HOME/scripts/git-tags.zsh";
      "$ZENO_HOME/scripts/git-commits.zsh";
      )
    options: *format-options
    callback: awk '{ print $3 }'

  - name: git-switch
    patterns:
      - ^\s*(git)(\s+-\S+)*\s+(merge|rebase|switch)(\s+\S+)*\s+$
    sourceCommand: >
      (
      "$ZENO_HOME/scripts/git-local-branches.zsh";
      "$ZENO_HOME/scripts/git-remote-branches.zsh";
      "$ZENO_HOME/scripts/git-tags.zsh";
      "$ZENO_HOME/scripts/git-commits.zsh";
      )
    options:
      <<: *format-options
      --preview: echo {} | awk '{ print $3 }' | xargs -r git show --color | delta
    callback: awk '{ print $3 }' | sed 's|^origin/||'

  - name: git-user
    patterns:
      - ^\s*(git)(\s+-\S+)*\s+(user)\s+$
    sourceCommand: git users | sed -E 's/:\s*/\t/'
    options: *default-options
    callback: awk '{ print $1 }'

  - name: git
    patterns:
      - ^\s*(git)(\s+-\S+)*\s+$
    sourceCommand: >
      (
      "$ZENO_HOME/scripts/options.zsh" "git/subcommands" "\ufb32" "command" "yellow";
      "$ZENO_HOME/scripts/git-aliases.zsh";
      "$ZENO_HOME/scripts/git-tools.zsh";
      "$ZENO_HOME/scripts/options.zsh" "git/options" "\uf73a" "option" "blue";
      )
    options: *format-options
    callback: awk '{ print $3 }'

  # npm
  - name: npm-run
    patterns:
      - ^\s*(npm)\s+(run)\s+$
    sourceCommand: |
      "$ZENO_HOME/scripts/npm-scripts.zsh"
    options: *format-options
    callback: awk '{ print $3 }'

  - name: npm
    patterns:
      - ^\s*(npm)\s+$
    sourceCommand: |
      "$ZENO_HOME/scripts/options.zsh" "npm/subcommands" "\ufb32" "command" "yellow"
    options: *format-options
    callback: awk '{ print $3 }'

  # tmux
  - name: tmux
    patterns:
      - ^\s*(tmux)\s+$
    sourceCommand: >
      (
      "$ZENO_HOME/scripts/options.zsh" "tmux/subcommands" "\ufb32" "command" "yellow";
      "$ZENO_HOME/scripts/options.zsh" "tmux/options" "\uf73a" "option" "blue";
      )
    options: *format-options
    callback: awk '{ print $3 }'
