add	add file contents to index
am	apply patches from a mailbox
apply	apply patch to files and/or to index
archimport	import an Arch repository into git
archive	create archive of files from named tree
bisect	find, by binary search, change that introduced a bug
blame	show what revision and author last modified each line of a file
branch	list, create, or delete branches
bundle	move objects and refs by archive
cat-file	provide content or type information for repository objects
check-attr	display gitattributes information
check-ignore	debug gitignore/exclude files
check-mailmap	show canonical names and email addresses of contacts
check-ref-format	ensure that a reference name is well formed
checkout	checkout branch or paths to working tree
checkout-index	copy files from index to working directory
cherry	find commits not merged upstream
cherry-pick	apply changes introduced by some existing commits
citool	graphical alternative to git commit
clean	remove untracked files from working tree
clone	clone repository into new directory
column	display data in columns
commit	record changes to repository
commit-graph	write and verify Git commit-graph files
commit-tree	create new commit object
config	get and set repository or global options
count-objects	count unpacked objects and display their disk consumption
cvsexportcommit	export a single commit to a CVS checkout
cvsimport	import a CVS "repository" into a git repository
cvsserver	run a CVS server emulator for git
daemon	run a really simple server for git repositories
describe	show most recent tag that is reachable from a commit
diff	show changes between commits, commit and working tree, etc.
diff-files	compare files in working tree and index
diff-index	compare content and mode of blobs between index and repository
diff-tree	compare content and mode of blobs found via two tree objects
difftool	show changes using common diff tools
fast-export	data exporter
fast-import	import information into git directly
fetch	download objects and refs from another repository
fetch-pack	receive missing objects from another repository
filter-branch	rewrite branches
fmt-merge-msg	produce merge commit message
for-each-ref	output information on each ref
format-patch	prepare patches for e-mail submission
fsck	verify connectivity and validity of objects in database
gc	cleanup unnecessary files and optimize local repository
get-tar-commit-id	extract commit ID from an archive created using git archive
grep	print lines matching a pattern
gui	run portable graphical interface to git
hash-object	compute object ID and optionally create a blob from a file
help	display help information about git
http-backend	run a server side implementation of Git over HTTP
http-fetch	download from remote git repository via HTTP
http-push	push objects over HTTP/DAV to another repository
imap-send	send a collection of patches to an IMAP folder
index-pack	build pack index file for an existing packed archive
init	create empty git repository or re-initialize an existing one
instaweb	instantly browse your working repository in gitweb
interpret-trailers	add or parse structured information in commit messages
log	show commit logs
ls-files	information about files in index/working directory
ls-remote	show references in a remote repository
ls-tree	list contents of a tree object
mailinfo	extract patch and authorship from a single email message
mailsplit	split mbox file into a list of files
merge	join two or more development histories together
merge-base	find as good a common ancestor as possible for a merge
merge-file	run a three-way file merge
merge-index	run merge for files needing merging
merge-one-file	standard helper-program to use with git merge-index
merge-tree	show three-way merge without touching index
mergetool	run merge conflict resolution tools to resolve merge conflicts
mktag	create tag object
mktree	build tree-object from git ls-tree formatted text
multi-pack-index	write and verify multi-pack-indexes
mv	move or rename file, directory, or symlink
name-rev	find symbolic names for given revisions
notes	add or inspect object notes
pack-objects	create packed archive of objects
pack-redundant	find redundant pack files
pack-refs	pack heads and tags for efficient repository access
parse-remote	routines to help parsing remote repository access parameters
patch-id	compute unique ID for a patch
prune	prune all unreachable objects from the object database
prune-packed	remove extra objects that are already in pack files
pull	fetch from and merge with another repository or local branch
push	update remote refs along with associated objects
quiltimport	apply a quilt patchset
range-diff	compare two commit ranges
read-tree	read tree information into directory index
rebase	forward-port local commits to the updated upstream head
receive-pack	receive what is pushed into repository
reflog	manage reflog information
remote	manage set of tracked repositories
repack	pack unpacked objects in a repository
replace	create, list, delete refs to replace objects
request-pull	generate summary of pending changes
rerere	reuse recorded resolution of conflicted merges
reset	reset current HEAD to specified state
restore	restore working tree files
rev-list	list commit object in reverse chronological order
rev-parse	pick out and massage parameters for other git commands
revert	revert existing commits
rm	remove files from the working tree and from the index
send-email	send collection of patches as emails
send-pack	push objects over git protocol to another repository
shell	restricted login shell for GIT-only SSH access
shortlog	summarize git log output
show	show various types of objects
show-branch	show branches and their commits
show-index	show packed archive index
show-ref	list references in a local repository
stash	stash away changes to dirty working directory
status	show working-tree status
stripspace	filter out empty lines
submodule	initialize, update, or inspect submodules
subtree	split repository into subtrees and merge them
svn	bidirectional operation between a Subversion repository and git
switch	switch branches
symbolic-ref	read and modify symbolic references
tag	create, list, delete or verify tag object signed with GPG
unpack-file	create temporary file with blob's contents
unpack-objects	unpack objects from packed archive
update-index	register file contents in the working directory to the index
update-ref	update object name stored in a reference safely
update-server-info	update auxiliary information file to help dumb servers
upload-archive	send archive back to git-archive
upload-pack	send objects packed back to git fetch-pack
var	show git logical variable
verify-commit	check GPG signature of commits
verify-pack	validate packed git archive files
verify-tag	check GPG signature of tags
version	show git version
whatchanged	show commit-logs and differences they introduce
worktree	manage multiple working dirs attached to the same repository
write-tree	create tree from the current index
